[tox]
envlist =
    pre-commit
    py36
    py36-{setproctitle,uvloop,uvloopandsetproctitle}
    py37
    py37-{setproctitle,uvloop,uvloopandsetproctitle}
    build
    docs
    lint
    man
    pipfile
    setuppy
    shellcheck
    coverage-report

[testenv]
base_python =
    py36: {env:TOXPYTHON:python3.6}
    py37: {env:TOXPYTHON:python3.7}
    py36-{setproctitle,uvloop,uvloopandsetproctitle}: {env:TOXPYTHON:python3.6}
    py37-{setproctitle,uvloop,uvloopandsetproctitle}: {env:TOXPYTHON:python3.7}
    {build,coverage-report,docs,lint,man,pipfile,pre-commit,setuppy,shellcheck}: {env:TOXPYTHON:python3.6}
setenv = VIRTUALENV_NO_DOWNLOAD=1
deps =
    setproctitle: setproctitle
    uvloop: uvloop
    uvloopandsetproctitle: setproctitle
    uvloopandsetproctitle: uvloop
extras = tests
commands = coverage run --parallel -m pytest \
    --cache-clear \
    --verbose blackhole tests

[testenv:py36]
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:py37]
extras = tests
setenv = PYTHONWARNINGS=d

[testenv:build]
skip_install = True
deps = wheel
commands = python setup.py sdist bdist_wheel

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    coverage combine
    coverage report

[testenv:docs]
extras = docs
changedir = docs/source
commands =
    sphinx-build -j 4 -d {envtmpdir}/doctrees . {envtmpdir}/html -c .

[testenv:lint]
skip_install = true
extras = tests
deps =
    black
    flake8
    flake8-bugbear
    flake8-isort
commands =
    flake8 blackhole tests setup.py setup_helpers.py docs/source/conf.py
    black --check --verbose blackhole tests setup.py setup_helpers.py docs/source/conf.py

[testenv:man]
skip_install = True
deps = docutils
commands =
    rst2man.py man/source/blackhole.rst {envtmpdir}/blackhole.1
    rst2man.py man/source/blackhole_config.rst {envtmpdir}/blackhole_config.1

[testenv:manifest]
basepython = python3.6
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:pipfile]
skip_install = True
deps = pipenv
commands =
    pipenv check
    pipenv install

[testenv:pre-commit]
skip_install = true
deps = pre-commit
commands = pre-commit run --all-files --verbose

[testenv:setuppy]
deps =
    docutils
    readme_renderer
skip_install = true
commands = python setup.py check -r -s -m

[testenv:shellcheck]
skip_install = true
whitelist_externals = shellcheck
commands = shellcheck -x \
    scripts/minify.sh \
    scripts/update-libuv.sh \
    bash-completion/blackhole-completion.bash \
    init.d/debian-ubuntu/blackhole
