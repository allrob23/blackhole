name: CI

on:
  push:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  unittest: 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - name: Apt install
        run: sudo apt install shellcheck
      - name: Pip install
        run: pip install codecov tox
      - name: Build and install uvloop
        run: |
          git clone https://github.com/libuv/libuv.git
          pushd libuv
          git checkout $(git describe --tags)
          sh autogen.sh
          ./configure
          make
          sudo make install
          popd
      - name: unittest py3.7
        if: ${{ matrix.python-version == '3.7' }}
        env:
          TOXENV: py37,py37-setproctitle,py37-uvloop
        run: tox
      - name: unitest py3.8
        if: ${{ matrix.python-version == '3.8' }}
        env:
          TOXENV: py38,py38-setproctitle,py38-uvloop
        run: tox
      - name: unittest py3.9
        if: ${{ matrix.python-version == '3.9' }}
        env:
          TOXENV: py39,py39-setproctitle,py39-uvloop
        run: tox
      - name: unittest pypy-3.7
        if: ${{ matrix.python-version == 'pypy-3.7' }}
        env:
          TOXENV: pypy3,pypy3-setproctitle,pypy3-uvloop
        run: tox
      - name: Generate coverage report
        run: tox -e coverage-report
      - name: Upload coverage
        uses: codecov/codecov-action@v1.0.10
        if: github.ref == 'refs/heads/master'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          name: blackhole 
          flags: unittests
          env_vars: PYTHON
          fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: Lint
        run: tox -e lint

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: Docs
        run: tox -e docs
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./.tox/docs/tmp/html

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: Build
        run: tox -e build

  man:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: Man
        run: tox -e man

  poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: Poetry
        run: tox -e poetry

  setuppy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Pip install
        run: pip install tox
      - name: setup.py
        run: tox -e setuppy

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: x64
      - name: Install shellcheck
        run: sudo apt install shellcheck
      - name: Pip install
        run: pip install tox
      - name: Shellcheck
        run: tox -e shellcheck
